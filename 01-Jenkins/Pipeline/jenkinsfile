node {
 try  {
 notify('Job Started') 

     
  stage('Git-Checkout') {
   git branch: 'master_dev', url: 'https://github.com/smbbasha/devops'
  }
    
 def project_path="01-Jenkins/Code/petclinic"
 
 dir(project_path) {
    
  stage('Maven-Clean') {
   sh label: '', script: 'mvn clean'
  }
    
 stage('Maven-Compile') {
   sh label: '', script: 'mvn compile'
  }
  
   stage('Maven-Test') {
   sh label: '', script: 'mvn test'
  }
  
   stage('Maven-Package') {
   sh label: '', script: 'mvn package'
  }
   stage('SonarQube Analysis'){
     withSonarQubeEnv('SonarQube server'){
       sh 'mvn sonar:sonar'
     }
   }
   stage('Jfrog Artifacory Upload') {
	def server= Artifactory.server 'jfrog'
	def uploadSpec= """{
	"files": [{
	"pattern": "/root/.jenkins/workspace/Pipeline as a code/01-Jenkins/Code/petclinic/target/*.war",
	"target": "Devops301"}]
	}"""
        server.upload(uploadSpec)
	}
   stage('Docker-Stage-Deployment') {
   sh label: '', script: 'docker-compose up -d --build'
  }
def notify(status){
    emailext (
	to: "amitvashist7@gmail.com",
	subject: "${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
	 body: """<p>${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
	<p>Check console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",
		)
	}

